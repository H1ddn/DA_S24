set.seed(42)
par(mar = rep(0.2,4))
data_matrix <-matrix(rnorm(400), nrow=40)
image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
heatmap(data_matrix)
data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
for(i in 1:40){
coin_flip <- rbinom(1, size = 1, prob = 0.5)
if(coin_flip){
data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
}
}
heatmap(data_matrix)
data("iris")
View(iris)
iris_selected <- select(iris, -4)
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
iris_selected <- select(iris, -4)
view(iris_selected)
View(iris_selected)
View(iris)
iris_selected <- select(iris, -5)
View(iris_selected)
iris_selected <- kmeans(x=iris_selected, centers=3)
iris_selected <- select(iris, -5)
iris_clusters <- kmeans(x=iris_selected, centers=3)
plot(iris_clusters, data=iris_selected)
plot(iris_selected, data=iris_clusters)
plot(iris_clusters)
iris_clusters
install.packages("useful")
library(useful)
plot(iris_clustersm, data=iris_selected)
plot(iris_clusters, data=iris_selected)
abalone <- read.csv('abalone.csv')
View(abalone)
install.packages("caTools")
library(caTools)
split = sample.split(data$not_fully_paid,
SplitRatio = 0.75)
split = abalone.split(data,
SplitRatio = 0.75)
split = sample.split(abalone,
SplitRatio = 0.75)
train = subset(abalone,
split == TRUE)
test = subset(abalone,
split == FALSE)
train_scaled = scale(train[-13])
abalone <- select(abalone, -1)
abalone <- select(abalone, -1)
split = sample.split(abalone,
SplitRatio = 0.75)
train = subset(abalone,
split == TRUE)
test = subset(abalone,
split == FALSE)
abalone_raw <- read.csv('abalone.csv')
library(caTools)
library(dplyr)
abalone <- select(abalone_raw, -1)
split = sample.split(abalone,
SplitRatio = 0.75)
train = subset(abalone,
split == TRUE)
test = subset(abalone,
split == FALSE)
train_scaled = scale(train[-13])
test_scaled = scale(test[-13])
install.packages("class")
library(class)
test_pred <- knn(
train = train_scaled,
test = test_scaled,
cl = train$not_fully_paid,
k=10
)
View(abalone_raw)
test_pred <- knn(
train = train_scaled,
test = test_scaled,
cl = abalone_raw$Sex,
k=10
)
View(abalone)
split = sample.split(abalone$Rings,
SplitRatio = 0.75)
train = subset(abalone,
split == TRUE)
test = subset(abalone,
split == FALSE)
test_pred <- knn(
train = train_scaled,
test = test_scaled,
cl = abalone$Rings,
k=10
)
View(test_scaled)
train_wo_target <- select(train, -8)
test_wo_target <- select(test, -8)
View(abalone)
train_scaled = scale(train_wo_target[-13])
test_scaled = scale(test_wo_target[-13])
test_pred <- knn(
train = train_scaled,
test = test_scaled,
cl = train$Rings,
k=10
)
cm <- table(test$Rings,test_pred)
plot(cm)
cm
