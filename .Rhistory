class(R)
# R Basics with Examples.
## Data Types
# numerics,character and logical
temperature <- 22.5 # degrees in Fahrenheit
temperature = 22.5
class(temperature)
RPI <- "Rensselaer Polytechnic Institue"
class(RPI)
Rpi <- 3.14159265359
class(Rpi)
isSnowing <- TRUE
class(isSnowing)
R <- FALSE
class(R)
R <- 0
class(R)
## Vectors
num_vec <- c(1,3,5,99)
class(num_vec)
cha_vec <- c("R","P","I")
class(cha_vec)
boolean_vec <- c(T,FALSE,F) # T = TRUE, you can simply use T for TURE
class(boolean_vec)
# mixed variable types
vec_mixed <- c("RPI", 1824, 3.14)
vec_mixed
class(vec_mixed) # Note: the 1824 and 3.14 are converted to characters
vec_mixed_boolean <- c(TRUE,"RPI", 1824, 3.14)
vec_mixed_boolean
class(vec_mixed) # Note: the 1824 and 3.14 are converted to characters
vec_mixed_boolean <- c(TRUE,"RPI", 1824, 3.14)
vec_mixed_boolean
class(vec_mixed_boolean)
vec_numeric_boolean <- c(TRUE,1824,3.14)
vec_numeric_boolean
class(vec_numeric_boolean)
temperature <- c(20,24.3,23,24.2,22.5)
names(temperature) <- c("Mon","Tue","Web","Thur","Fri")
temperature
# You can do the same thing by:
Week_Days <-c("Mon","Tue","Web","Thur","Fri")
names(temperature) <- Week_Days
temperature
# Indexing Vectors
# Note: indexing in R starts with 1, in python programming language indexing start with 0.
vec1 <- c('R','P','I')
vec2 <- c(1,8,2,4)
vec1[1]
vec2[2]
# Matrix
m <- c(1:10)
m
matrix(m,nrow = 2)
matrix(1:12,byrow = FALSE,nrow = 4)
matrix(1:12,byrow = TRUE,nrow = 4)
# stock prices
goog <- c(560,564,563,562,561)
msft <- c(480,482,484,483,482)
stocks <- c(goog,msft)
stocks
print(stocks)
stock.matrix <- matrix(stocks,byrow = T,nrow = 2)
stock.matrix
days <- c("Mon","Tue","Wed","Thur","Fri")
st.names <- c("goog","msft")
colnames(stock.matrix) <- days
rownames(stock.matrix) <- st.names
print(stock.matrix)
mat <- matrix(1:25,byrow = T, nrow = 5)
mat
# Bind the Columns
FB <- c(223,224,225,223.5,222)
tech.stocks <- rbind(stock.matrix,FB) # Row bind
tech.stocks
avg <- rowMeans(tech.stocks)
avg
tech.stocks <- cbind(tech.stocks,avg) # Column bind
tech.stocks
mat <- matrix(1:50,byrow = T, nrow = 5)
mat
mat[1,] # first row with all the columns
mat[,1] # first column and all the rows
mat[1:3,]
mat[1:2,1:3]
mat[,9:10]
mat[2:3,5:6]
# Factor and Catergorical variables
animals <- c('dog','cat','dog','cat','cat')
id <- c(1,2,3,4,5)
temps <- c('cold','med','hot','hot','hot','cold','med')
temps
fact.temps <- factor(temps, ordered = TRUE, levels = c('cold','med','hot'))
fact.temps
summary(fact.temps)
summary(temps)
undergrads <-c('Freshman','Junior', 'Sophomore','Junior','Senior','Sophomore','Junior','Freshman','Senior','Junior')
undergrads
factor.undergrads <-factor(undergrads,ordered = TRUE,levels = c('Freshman','Sophomore','Junior','Senior'))
factor.undergrads
summary(factor.undergrads)
# Exercise
A <- c(1,2,3)
B <- c(4,5,6)
A <- rbind(A,B)
A
mat <- matrix(1:9, nrow = 3)
mat
is.matrix(mat)
mat2 <- matrix(1:25, byrow = T, nrow = 5)
mat2
mat2[2:3,2:3]
mat2[4:5,4:5]
sum(mat2)
help("runif")
u <- runif(20)
u
runif(matrix(20))
matrix(runif(20),nrow = 4)
days = c('Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun') # days
temp <- c(28,30.5,32,31.2,29.3,27.9,26.4) # temps in F
snowed <- c(T,T,F,F,T,T,F) # snow?
snowed
class(snowed)
help("data.frame")
RPI_Weather_Week <- data.frame(days,temp,snowed) # creating dataframe using the data.frame() function
RPI_Weather_Week
head(RPI_Weather_Week)
str(RPI_Weather_Week)
summary(RPI_Weather_Week)
RPI_Weather_Week[1,]
RPI_Weather_Week[,1] # shows first column
RPI_Weather_Week$snowed
sorted.snowed <- order(RPI_Weather_Week['snowed'])
dec.snowed <- order(RPI_Weather_Week$temp)
dec.snowed
# create empty dataframe
empty.DataFrame <- data.frame()
v1 <- 1:10
leters
letters
v2 <- letters[1:10]
df <- data.frame(col_name.1 = v1, First10Letters = v2)
df
weite.csv(df,file = 'saved_df1_Section2.csv')
write.csv(df,file = 'saved_df1_Section2.csv')
df_section2 <- read.csv('saved_df1_Section2.csv')
df_section2
summary(df)
myData = read.csv(file.choose(),header=True)
dim(myData)
myData = read.csv(file.choose(),header=True)
str(myData)
dim(myData)
myData = read.csv(file.choose(),header=True)
myData = read.csv(file.choose(),header=TRUE)
str(myData)
dim(myData)
myData
head(myData)
View(myData)
myData$EPI
EPI_data <- read.csv('<path>/2010EPI_data.csv')
EPI_data <- read.csv('2010EPI_data.csv')
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(EPI_data)
#
attach(EPI_data) 	# sets the ‘default’ object
fix(EPI_data) 	# launches a simple data editor
EPI 			# prints out values EPI_data$EPI
tf <- is.na(EPI) # records True values if the value is NA
E <- EPI[!tf] # filters out NA values, new array
#other data
GRUMP_data <- read.csv('GPW3_GRUMP_SummaryInformation_2010.csv')
summary(EPI)
EPI_data <- read.csv('2010EPI_data.csv')
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(EPI_data)
#
attach(EPI_data) 	# sets the ‘default’ object
fix(EPI_data) 	# launches a simple data editor
EPI 			# prints out values EPI_data$EPI
EPI_data <- read.csv('2010EPI_data.csv')
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(EPI_data)
#
# FIX ROW NAMES
names(EPI_data) <- as.character(unlist(EPI_data[1,]))
EPI_data[-1,]
EPI_data <- read.csv('2010EPI_data.csv')
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
#
# FIX ROW NAMES
names(EPI_data) <- as.character(unlist(EPI_data[1,]))
EPI_data <- EPI_data[-1,]
View(EPI_data)
